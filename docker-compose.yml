version: '3.8'
services:
  traefik:
    image: traefik:latest
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.https.address=:443"
      - "--providers.file.directory=/etc/traefik"
    ports:
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik:/etc/traefik"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./frontend
        target: /opt/nu
    command: npm run serve
    ports:
      - "8080:8080"
    environment:
      CHOKIDAR_USEPOLLING: 1
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`nu.localhost`)"
      - "traefik.http.routers.web.entrypoints=https"
      - "traefik.http.routers.web.tls=true"
  db:
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - ./db/pg_init.sh:/docker-entrypoint-initdb.d/pg_init.sh
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  backend:
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/opt/nu
    build:
      dockerfile: Dockerfile
      context: backend
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`nu.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.stripapiprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.backend.entrypoints=https"
      - "traefik.http.routers.backend.middlewares=stripapiprefix@docker"
      - "traefik.http.routers.backend.tls=true"

volumes:
  app-db-data:
